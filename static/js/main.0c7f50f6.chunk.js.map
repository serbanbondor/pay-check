{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","utils/format.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","className","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","numberWithComma","number","toString","replace","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","Math","abs","Transaction","sign","text","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c7f50f6.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Header = () => {\n  return (\n    <div className=\"header\">\n      <h2 className=\"title\">Pay Check</h2>\n      <p>Check where your money goes</p>\n    </div>\n  );\n};\n","export default (state, action) => {\n  switch (action.type) {\n    case 'DELETE_TRANSACTION':\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions],\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n// Initial state\nconst initialState = {\n  transactions: [],\n};\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id,\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction,\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","export function numberWithComma(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { numberWithComma } from '../utils/format';\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <>\n      <h4>Your Balance</h4>\n      <h1>${numberWithComma(total)}</h1>\n    </>\n  );\n};\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { numberWithComma } from '../utils/format';\n\nexport const IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transactions) => transactions.amount);\n\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = amounts\n    .filter((item) => item < 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p className=\"money plus\">+${numberWithComma(Math.abs(income))}</p>\n      </div>\n      <div>\n        <h4>Expenses</h4>\n        <p className=\"money minus\">-${numberWithComma(Math.abs(expense))}</p>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { numberWithComma } from '../utils/format';\n\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? '-' : '+';\n\n  return (\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n      {transaction.text}{' '}\n      <span>\n        {sign}${numberWithComma(Math.abs(transaction.amount).toFixed(2))}\n      </span>\n      <button\n        className=\"delete-btn\"\n        onClick={() => deleteTransaction(transaction.id)}\n      >\n        <i className=\"fas fa-times\"></i>\n      </button>\n    </li>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Transaction } from './Transaction';\n\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const TransactionList = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  return (\n    <>\n      <h3>History</h3>\n      <ul className=\"list\">\n        {transactions.map((transaction) => (\n          <Transaction key={transaction.id} transaction={transaction} />\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const AddTransaction = () => {\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState('');\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 10000000),\n      text,\n      amount: +amount,\n    };\n\n    addTransaction(newTransaction);\n  };\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\"></label>\n          <input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Name of the transaction\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">Tip: use \"-\" (minus sign) for expenses</label>\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder=\"Transaction amount\"\n          />\n        </div>\n        <button className=\"btn\">Add Transaction</button>\n      </form>\n    </>\n  );\n};\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <div className=\"flex-child infos\">\n          <Balance />\n          <IncomeExpenses />\n          <AddTransaction />\n        </div>\n        <div className=\"flex-child history\">\n          <TransactionList />\n        </div>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}